package com.management;

public class GameManagement {
	private int level;
	private int round;
	private int ownMedal;
	private int betMedal;

	private final int LEVEL_EASY_MEDAL = 30;
	private final int LEVEL_NORMAL_MEDAL = 15;
	private final int LEVEL_HERD_MEDAL = 5;

	/**
	 * レベルを受け取りオブジェクトを作成する
	 * @param level
	 */
	public GameManagement(int level) {
		this.level = level;
		this.round = 0;
		this.ownMedal = initialMedal(level);
		this.betMedal = 0;
	}

	/**
	 * 入力されたレベルによって初期メダルを設定する
	 * @param level
	 * @return
	 */
	public int initialMedal(int level) {
		if (level == 1) {
			return LEVEL_EASY_MEDAL;
		} else if (level == 2) {
			return LEVEL_NORMAL_MEDAL;
		} else {
			return LEVEL_HERD_MEDAL;
		}
	}

	public int getLevel() {
		return this.level;
	}

	public void setRound(int round) {
		this.round = round;
	}

	public int getRound() {
		return this.round;
	}

	public void setOwnMedal(int ownMedal) {
		this.ownMedal = ownMedal;
	}

	public int getOwnMedal() {
		return this.ownMedal;
	}

	public void setBetMedal(int betMedal) {
		this.betMedal = betMedal;
	}

	public int getBetMedal() {
		return this.betMedal;
	}

	//メダルをかけた後の処理
	public boolean BetAfterMedal(int betMedal) {
		if(this.ownMedal >= this.betMedal) {
			this.setOwnMedal(this.ownMedal - this.betMedal);
			return true;
		}
		return false;
	}

	public GameManagement resultGameManagement(GameManagement gamemanagement,boolean result) {
		//勝った場合の処理
		if(result == true) {
			gamemanagement.setOwnMedal(
					gamemanagement.getOwnMedal() + gamemanagement.getBetMedal() * 2
					);

		}
	}

	//ラウンドの結果、
	//負けた場合は持ちメダルからｂｅｔメダルを引く

	//ラウンドを1増やす getで受け取って、＋１した値をセットして返す？？


	//勝った場合はbetメダルを倍を持ちメダルに追加する
	//ラウンド毎に参加費を計算する
	//参加費が足りないかの判定
	//最高所持メダルの保存

}
