package jp.co.Blackjack.reserve;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import jp.co.Blackjack.management.GameManagement;
import jp.co.Blackjack.management.CardManagement;

@WebServlet("/PlayerAction")
public class PlayerActionServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        HttpSession session = request.getSession();
        GameManagement gameManagement = (GameManagement) session.getAttribute("gamemanagement");
        CardManagement cardManagement = (CardManagement) session.getAttribute("cardManagement");

        if (gameManagement == null || cardManagement == null) {
            response.sendRedirect("menu.jsp");
            return;
        }

        String action = request.getParameter("action");

        switch (action) {
            case "hit":
            	cardManagement.playerAddCards();
            	//バーストしているかの判定としていたら画面遷移はcaseの後？？
            	System.out.println("hitを受け取りました");
                break;
            case "stand":
                //handleStand(cardManagement, gameManagement);
            	System.out.println("Standを受け取りました");
                break;
            case "doubledown":
                //handleDoubleDown(cardManagement, gameManagement);
            	System.out.println("DoubleDownを受け取りました");
                break;
            case "surrender":
                //handleSurrender(gameManagement);
            	System.out.println("Srrenderを受け取りました");
                break;
            default:
                // 無効なアクションの場合の処理
            	response.sendRedirect("menu.jsp");
                return;
        }

        // ゲーム状態の更新
        session.setAttribute("gamemanagement", gameManagement);
        session.setAttribute("cardManagement", cardManagement);

        if(cardManagement.isBusted(cardManagement.getPlayerHand())) {
        	request.getRequestDispatcher("ResultScreen.jsp").forward(request, response);
        }

        request.getRequestDispatcher("BlackjackPlayScreen.jsp").forward(request, response);
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.sendRedirect("menu.jsp");
    }
}